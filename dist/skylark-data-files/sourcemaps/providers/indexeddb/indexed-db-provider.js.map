{"version":3,"sources":["providers/indexeddb/indexed-db-provider.js"],"names":["define","files","FileError","ErrorCodes","AsyncKeyValueProvider","registry","utils","IndexedDBStore","IndexedDBROTransaction","IndexedDBRWTransaction","indexedDB","window","mozIndexedDB","webkitIndexedDB","msIndexedDB","IndexedDBProvider","constructor","cacheSize","super","Create","opts","cb","storeName","e","store","idbfs","init","isAvailable","open","Name","Options","type","optional","description","add","providers"],"mappings":";;;;;;;AAAAA,OAAO,CACH,cACA,mBACA,oBACA,8BACA,cACA,cACA,qBACA,8BACA,+BACD,SAAUC,EAAMC,EAAUC,EAAYC,EAAwBC,EAASC,EAAMC,EAAeC,EAAuBC,GAClH,aAMA,MAAMC,EAAYC,OAAOD,WACrBC,OAAOC,cACPD,OAAOE,iBACPF,OAAOG,kBAILC,UAA0BX,EAC5BY,YAAYC,GACRC,MAAMD,CAAS,CACnB,CAIAE,cAAcC,EAAO,GAAIC,GACrBd,EAAeY,OAAOC,EAAKE,WAA6B,YAAa,CAACC,EAAGC,KACrE,GAAIA,EAAO,CACP,MAAMC,EAAQ,IAAIV,EAA8C,UAA5B,OAAQK,EAAc,UAAiBA,EAAKH,UAAY,GAAG,EAC/FQ,EAAMC,KAAKF,EAAO,IACVD,EACAF,EAAGE,CAAC,EAGJF,EAAG,KAAMI,CAAK,CAEtB,CAAC,CACL,MAEIJ,EAAGE,CAAC,CAEZ,CAAC,CACL,CACAI,qBAKI,IACI,OAA4B,KAAA,IAAdjB,GAA6B,OAASA,EAAUkB,KAAK,oBAAoB,CAI3F,CAFA,MAAOL,GACH,MAAO,CAAA,CACX,CACJ,CACJ,CAsBA,OArBAR,EAAkBc,KAAO,YACzBd,EAAkBe,QAAU,CACxBR,UAAW,CACPS,KAAM,SACNC,SAAU,CAAA,EACVC,YAAa,oIACjB,EACAhB,UAAW,CACPc,KAAM,SACNC,SAAU,CAAA,EACVC,YAAa,sFACjB,CACJ,EAGAlB,EAAkBP,uBAAyBA,EAC3CO,EAAkBN,uBAAyBA,EAC3CM,EAAkBR,eAAiBA,EAEnCF,EAAS6B,IAAI,YAAYnB,CAAiB,EAEnCd,EAAMkC,UAAUpB,kBAAoBA,CAC/C,CAAC","file":"../../../providers/indexeddb/indexed-db-provider.js","sourcesContent":["define([\r\n    \"../../files\",\r\n    '../../file-error',\r\n    '../../error-codes',\r\n    '../async-key-value-provider',\r\n    \"../registry\",\r\n    '../../utils',\r\n    \"./indexed-db-store\",\r\n    \"./indexed-db-ro-transaction\",\r\n    \"./indexed-db-rw-transaction\"\r\n], function (files,FileError,ErrorCodes, AsyncKeyValueProvider,  registry,utils,IndexedDBStore,IndexedDBROTransaction,IndexedDBRWTransaction) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Get the indexedDB constructor for the current browser.\r\n     * @hidden\r\n     */\r\n    const indexedDB = window.indexedDB ||\r\n        window.mozIndexedDB ||\r\n        window.webkitIndexedDB ||\r\n        window.msIndexedDB;\r\n    /**\r\n     * A file system that uses the IndexedDB key value file system.\r\n     */\r\n    class IndexedDBProvider extends AsyncKeyValueProvider {\r\n        constructor(cacheSize) {\r\n            super(cacheSize);\r\n        }\r\n        /**\r\n         * Constructs an IndexedDB file system with the given options.\r\n         */\r\n        static Create(opts = {}, cb) {\r\n            IndexedDBStore.Create(opts.storeName ? opts.storeName : 'browserfs', (e, store) => {\r\n                if (store) {\r\n                    const idbfs = new IndexedDBProvider(typeof (opts.cacheSize) === 'number' ? opts.cacheSize : 100);\r\n                    idbfs.init(store, (e) => {\r\n                        if (e) {\r\n                            cb(e);\r\n                        }\r\n                        else {\r\n                            cb(null, idbfs);\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    cb(e);\r\n                }\r\n            });\r\n        }\r\n        static isAvailable() {\r\n            // In Safari's private browsing mode, indexedDB.open returns NULL.\r\n            // In Firefox, it throws an exception.\r\n            // In Chrome, it \"just works\", and clears the database when you leave the page.\r\n            // Untested: Opera, IE.\r\n            try {\r\n                return typeof indexedDB !== 'undefined' && null !== indexedDB.open(\"__browserfs_test__\");\r\n            }\r\n            catch (e) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    IndexedDBProvider.Name = \"IndexedDB\";\r\n    IndexedDBProvider.Options = {\r\n        storeName: {\r\n            type: \"string\",\r\n            optional: true,\r\n            description: \"The name of this file system. You can have multiple IndexedDB file systems operating at once, but each must have a different name.\"\r\n        },\r\n        cacheSize: {\r\n            type: \"number\",\r\n            optional: true,\r\n            description: \"The size of the inode cache. Defaults to 100. A size of 0 or below disables caching.\"\r\n        }\r\n    };\r\n\r\n\r\n    IndexedDBProvider.IndexedDBROTransaction = IndexedDBROTransaction;\r\n    IndexedDBProvider.IndexedDBRWTransaction = IndexedDBRWTransaction;\r\n    IndexedDBProvider.IndexedDBStore = IndexedDBStore;\r\n\r\n    registry.add(\"indexedDB\",IndexedDBProvider);\r\n\r\n    return files.providers.IndexedDBProvider = IndexedDBProvider;\r\n});"]}