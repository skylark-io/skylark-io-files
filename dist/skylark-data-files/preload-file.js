/**
 * skylark-data-files - The skylark file system library
 * @author Hudaokeji Co.,Ltd
 * @version v0.9.0
 * @link www.skylarkjs.org
 * @license MIT
 */
define(["skylark-langx-binary/buffer","./files","./error-codes","./file-error","./stats","./base-file","./utils"],function(h,t,n,a,e,s,i){"use strict";const c=i["emptyBuffer"];class r extends s{constructor(t,s,e,i,r){if(super(),this._pos=0,this._dirty=!1,this._fs=t,this._path=s,this._flag=e,this._stat=i,this._buffer=r||c(),this._stat.size!==this._buffer.length&&this._flag.isReadable())throw new Error(`Invalid buffer: Buffer is ${this._buffer.length} long, yet Stats object specifies that file is ${this._stat.size} long.`)}getBuffer(){return this._buffer}getStats(){return this._stat}getFlag(){return this._flag}getPath(){return this._path}getPos(){return this._flag.isAppendable()?this._stat.size:this._pos}advancePos(t){return this._pos+=t}setPos(t){return this._pos=t}sync(s){try{this.syncSync(),s()}catch(t){s(t)}}syncSync(){throw new a(n.ENOTSUP)}close(s){try{this.closeSync(),s()}catch(t){s(t)}}closeSync(){throw new a(n.ENOTSUP)}stat(s){try{s(null,e.clone(this._stat))}catch(t){s(t)}}statSync(){return e.clone(this._stat)}truncate(t,s){try{this.truncateSync(t),this._flag.isSynchronous()&&!fs.getRootFS().supportsSynch()&&this.sync(s),s()}catch(t){return s(t)}}truncateSync(t){if(this._dirty=!0,!this._flag.isWriteable())throw new a(n.EPERM,"File not opened with a writeable mode.");var s;this._stat.mtimeMs=Date.now(),t>this._buffer.length?(s=h.alloc(t-this._buffer.length,0),this.writeSync(s,0,s.length,this._buffer.length)):(this._stat.size=t,s=h.alloc(t),this._buffer.copy(s,0,0,t),this._buffer=s),this._flag.isSynchronous()&&fs.getRootFS().supportsSynch()&&this.syncSync()}write(t,s,e,i,r){try{r(null,this.writeSync(t,s,e,i),t)}catch(t){r(t)}}writeSync(t,s,e,i){var r;if(this._dirty=!0,null==i&&(i=this.getPos()),this._flag.isWriteable())return(r=i+e)>this._stat.size&&(this._stat.size=r)>this._buffer.length&&(r=h.alloc(r),this._buffer.copy(r),this._buffer=r),r=t.copy(this._buffer,i,s,s+e),this._stat.mtimeMs=Date.now(),this._flag.isSynchronous()?this.syncSync():this.setPos(i+r),r;throw new a(n.EPERM,"File not opened with a writeable mode.")}read(t,s,e,i,r){try{r(null,this.readSync(t,s,e,i),t)}catch(t){r(t)}}readSync(t,s,e,i){if(this._flag.isReadable())return(i=null==i?this.getPos():i)+e>this._stat.size&&(e=this._stat.size-i),t=this._buffer.copy(t,s,i,i+e),this._stat.atimeMs=Date.now(),this._pos=i+e,t;throw new a(n.EPERM,"File not opened with a readable mode.")}chmod(t,s){try{this.chmodSync(t),s()}catch(t){s(t)}}chmodSync(t){if(!this._fs.supportsProps())throw new a(n.ENOTSUP);this._dirty=!0,this._stat.chmod(t),this.syncSync()}isDirty(){return this._dirty}resetDirty(){this._dirty=!1}}return t.PreloadFile=r});
//# sourceMappingURL=sourcemaps/preload-file.js.map
