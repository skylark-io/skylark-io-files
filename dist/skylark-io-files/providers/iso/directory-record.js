/**
 * skylark-io-files - The skylark file system library
 * @author Hudaokeji Co.,Ltd
 * @version v0.9.0
 * @link www.skylarkjs.org
 * @license MIT
 */
define([],function(){"use strict";return class{constructor(t,e){this._suEntries=null,this._fileOrDir=null,this._data=t,this._rockRidgeOffset=e}hasRockRidge(){return-1<this._rockRidgeOffset}getRockRidgeOffset(){return this._rockRidgeOffset}rootCheckForRockRidge(t){var e=this.getDirectory(t);this._rockRidgeOffset=e.getDotEntry(t)._getRockRidgeOffset(t),-1<this._rockRidgeOffset&&(this._fileOrDir=null)}length(){return this._data[0]}extendedAttributeRecordLength(){return this._data[1]}lba(){return 2048*this._data.readUInt32LE(2)}dataLength(){return this._data.readUInt32LE(10)}recordingDate(){return getShortFormDate(this._data,18)}fileFlags(){return this._data[25]}fileUnitSize(){return this._data[26]}interleaveGapSize(){return this._data[27]}volumeSequenceNumber(){return this._data.readUInt16LE(28)}identifier(){return this._getString(33,this._data[32])}fileName(t){if(this.hasRockRidge()){var e=this._rockRidgeFilename(t);if(null!==e)return e}e=this.identifier();return this.isDirectory(t)||-1===(t=e.indexOf(";"))?e:"."===e[t-1]?e.slice(0,t-1):e.slice(0,t)}isDirectory(t){let e=!!(2&this.fileFlags());return e=!e&&this.hasRockRidge()?0<this.getSUEntries(t).filter(t=>t instanceof CLEntry).length:e}isSymlink(t){return this.hasRockRidge()&&0<this.getSUEntries(t).filter(t=>t instanceof SLEntry).length}getSymlinkPath(t){let e="";var t=this.getSUEntries(t),i=this._getGetString();for(const s of t)if(s instanceof SLEntry){for(const n of s.componentRecords()){var r=n.flags();2&r?e+="./":4&r?e+="../":!(8&r)&&(e+=n.content(i),1&r)||(e+="/")}if(!s.continueFlag())break}return 1<e.length&&"/"===e[e.length-1]?e.slice(0,e.length-1):e}getFile(t){if(this.isDirectory(t))throw new Error("Tried to get a File from a directory.");return null===this._fileOrDir&&(this._fileOrDir=t.slice(this.lba(),this.lba()+this.dataLength())),this._fileOrDir}getDirectory(t){if(this.isDirectory(t))return null===this._fileOrDir&&(this._fileOrDir=this._constructDirectory(t)),this._fileOrDir;throw new Error("Tried to get a Directory from a file.")}getSUEntries(t){return this._suEntries||this._constructSUEntries(t),this._suEntries}_rockRidgeFilename(t){t=this.getSUEntries(t).filter(t=>t instanceof NMEntry);if(0===t.length||6&t[0].flags())return null;let e="";var i=this._getGetString();for(const r of t)if(e+=r.name(i),!(1&r.flags()))break;return e}_constructSUEntries(t){let e=33+this._data[32];e%2==1&&e++,e+=this._rockRidgeOffset,this._suEntries=constructSystemUseEntries(this._data,e,this.length(),t)}_getRockRidgeOffset(t){this._rockRidgeOffset=0;var e=this.getSUEntries(t);if(0<e.length){var i=e[0];if(i instanceof SPEntry&&i.checkBytesPass())for(let t=1;t<e.length;t++){var r=e[t];if(r instanceof RREntry||r instanceof EREntry&&r.extensionIdentifier()===rockRidgeIdentifier)return i.bytesSkipped()}}return this._rockRidgeOffset=-1}}});
//# sourceMappingURL=../../sourcemaps/providers/iso/directory-record.js.map
