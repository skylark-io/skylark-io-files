{"version":3,"sources":["providers/worker/callback-argument-converter.js"],"names":["define","SpecialArgType","constructor","this","_callbacks","_nextId","toRemoteArg","cb","id","type","CB","toLocalArg"],"mappings":";;;;;;;AAAAA,OAAO,CACH,sBACD,SAAUC,GA4BT,aApBIC,cACIC,KAAKC,WAAa,GAClBD,KAAKE,QAAU,CACnB,CACAC,YAAYC,GACR,IAAMC,EAAKL,KAAKE,OAAO,GAEvB,OADAF,KAAKC,WAAWI,GAAMD,EACf,CACHE,KAAMR,EAAeS,GACrBF,GAAIA,CACR,CACJ,CACAG,WAAWH,GACP,IAAMD,EAAKJ,KAAKC,WAAWI,GAE3B,OADA,OAAOL,KAAKC,WAAWI,GAChBD,CACX,CACJ,CAIJ,CAAC","file":"../../../providers/worker/callback-argument-converter.js","sourcesContent":["define([\r\n    \"./special-arg-type\"\r\n], function (SpecialArgType) {\r\n\r\n    /**\r\n     * Converts callback arguments into ICallbackArgument objects, and back\r\n     * again.\r\n     * @hidden\r\n     */\r\n    class CallbackArgumentConverter {\r\n        constructor() {\r\n            this._callbacks = {};\r\n            this._nextId = 0;\r\n        }\r\n        toRemoteArg(cb) {\r\n            const id = this._nextId++;\r\n            this._callbacks[id] = cb;\r\n            return {\r\n                type: SpecialArgType.CB,\r\n                id: id\r\n            };\r\n        }\r\n        toLocalArg(id) {\r\n            const cb = this._callbacks[id];\r\n            delete this._callbacks[id];\r\n            return cb;\r\n        }\r\n    }\r\n\r\n\r\n    return CallbackArgumentConverter;\r\n});"]}