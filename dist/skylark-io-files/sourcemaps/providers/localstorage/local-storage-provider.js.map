{"version":3,"sources":["providers/localstorage/local-storage-provider.js"],"names":["define","Buffer","files","registry","SyncKeyValueProvider","ErrorCodes","FileError","LocalStorageStore","let","supportsBinaryString","binaryEncoding","window","localStorage","setItem","String","fromCharCode","getItem","e","isEncoding","LocalStorageProvider","constructor","super","store","Create","options","cb","isAvailable","Name","Options","add","providers"],"mappings":";;;;;;;AAAAA,OAAO,CACH,8BACA,cACA,cACA,6BACA,oBACA,mBACA,yBACD,SAAUC,EAAOC,EAAMC,EAASC,EAAsBC,EAAWC,EAAUC,GAC1E,aASAC,IAAIC,EAAuB,CAAA,EAAOC,EAClC,IACIC,OAAOC,aAAaC,QAAQ,WAAYC,OAAOC,aAAa,KAAM,CAAC,EACnEN,EAAuBE,OAAOC,aAAaI,QAAQ,UAAU,IAAMF,OAAOC,aAAa,KAAM,CAKjG,CAHA,MAAOE,GAEHR,EAAuB,CAAA,CAC3B,CAEAC,EAAiBD,EAAuB,gBAAkB,mBACrDR,EAAOiB,WAAWR,CAAc,QAU/BS,UAA6Bf,EAI/BgB,cAAgBC,MAAM,CAAEC,MAAO,IAAIf,CAAoB,CAAC,CAAG,CAI3DgB,cAAcC,EAASC,GACnBA,EAAG,KAAM,IAAIN,CAAsB,CACvC,CACAO,qBACI,OAAsC,KAAA,IAAxBf,OAAOC,YACzB,CACJ,CAUA,OARAO,EAAqBQ,KAAO,eAC5BR,EAAqBS,QAAU,GAE/BT,EAAqBZ,kBAAoBA,EAEzCJ,EAAS0B,IAAI,eAAeV,CAAoB,EAGzCjB,EAAM4B,UAAUX,qBAAuBA,CAClD,CAAC","file":"../../../providers/localstorage/local-storage-provider.js","sourcesContent":["define([\r\n    \"skylark-langx-binary/buffer\",\r\n    \"../../files\",\r\n    \"../registry\",\r\n    '../sync-key-value-provider',\r\n    '../../error-codes',\r\n    '../../file-error',\r\n    \"./local-storage-store\"\r\n], function (Buffer,files,registry,SyncKeyValueProvider, ErrorCodes,FileError,LocalStorageStore) {\r\n    'use strict';\r\n\r\n\r\n    /**\r\n     * Some versions of FF and all versions of IE do not support the full range of\r\n     * 16-bit numbers encoded as characters, as they enforce UTF-16 restrictions.\r\n     * @url http://stackoverflow.com/questions/11170716/are-there-any-characters-that-are-not-allowed-in-localstorage/11173673#11173673\r\n     * @hidden\r\n     */\r\n    let supportsBinaryString = false, binaryEncoding;\r\n    try {\r\n        window.localStorage.setItem(\"__test__\", String.fromCharCode(0xD800));\r\n        supportsBinaryString = window.localStorage.getItem(\"__test__\") === String.fromCharCode(0xD800);\r\n    }\r\n    catch (e) {\r\n        // IE throws an exception.\r\n        supportsBinaryString = false;\r\n    }\r\n    \r\n    binaryEncoding = supportsBinaryString ? 'binary_string' : 'binary_string_ie';\r\n    if (!Buffer.isEncoding(binaryEncoding)) {\r\n        // Fallback for non BrowserFS implementations of buffer that lack a\r\n        // binary_string format.\r\n        binaryEncoding = \"base64\";\r\n    }\r\n\r\n    /**\r\n     * A synchronous file system backed by localStorage. Connects our\r\n     * LocalStorageStore to our SyncKeyValueProvider.\r\n     */\r\n    class LocalStorageProvider extends SyncKeyValueProvider {\r\n        /**\r\n         * Creates a new LocalStorage file system using the contents of `localStorage`.\r\n         */\r\n        constructor() { super({ store: new LocalStorageStore() }); }\r\n        /**\r\n         * Creates a LocalStorageProvider instance.\r\n         */\r\n        static Create(options, cb) {\r\n            cb(null, new LocalStorageProvider());\r\n        }\r\n        static isAvailable() {\r\n            return typeof window.localStorage !== 'undefined';\r\n        }\r\n    }\r\n\r\n    LocalStorageProvider.Name = \"LocalStorage\";\r\n    LocalStorageProvider.Options = {};\r\n    \r\n    LocalStorageProvider.LocalStorageStore = LocalStorageStore;\r\n\r\n    registry.add(\"localStorage\",LocalStorageProvider);\r\n\r\n\r\n    return files.providers.LocalStorageProvider = LocalStorageProvider;\r\n});"]}