{"version":3,"sources":["providers/zip/data-descriptor.js"],"names":["define","constructor","data","this","crc32","readUInt32LE","compressedSize","uncompressedSize"],"mappings":";;;;;;;AAAAA,OAAO,GAAI,WACP,aAkBA,aARIC,YAAYC,GACRC,KAAKD,KAAOA,CAChB,CACAE,QAAU,OAAOD,KAAKD,KAAKG,aAAa,CAAC,CAAG,CAC5CC,iBAAmB,OAAOH,KAAKD,KAAKG,aAAa,CAAC,CAAG,CACrDE,mBAAqB,OAAOJ,KAAKD,KAAKG,aAAa,CAAC,CAAG,CAC3D,CAIJ,CAAC","file":"../../../providers/zip/data-descriptor.js","sourcesContent":["define([], function () {\r\n    'use strict';\r\n\r\n    /**\r\n     * 4.3.9  Data descriptor:\r\n     *\r\n     *    crc-32                          4 bytes\r\n     *    compressed size                 4 bytes\r\n     *    uncompressed size               4 bytes\r\n     */\r\n    class DataDescriptor {\r\n        constructor(data) {\r\n            this.data = data;\r\n        }\r\n        crc32() { return this.data.readUInt32LE(0); }\r\n        compressedSize() { return this.data.readUInt32LE(4); }\r\n        uncompressedSize() { return this.data.readUInt32LE(8); }\r\n    }\r\n\r\n    return DataDescriptor;\r\n\r\n});"]}