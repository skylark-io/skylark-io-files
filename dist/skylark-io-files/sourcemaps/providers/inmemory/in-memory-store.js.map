{"version":3,"sources":["providers/inmemory/in-memory-store.js"],"names":["define","SimpleSyncRWTransaction","constructor","this","store","clear","beginTransaction","type","get","key","put","data","overwrite","hasOwnProperty","del"],"mappings":";;;;;;;AAAAA,OAAO,CACH,iCACD,SAAUC,GACT,aA6BA,aAvBIC,cACIC,KAAKC,MAAQ,EACjB,CACAC,QAAUF,KAAKC,MAAQ,EAAI,CAC3BE,iBAAiBC,GACb,OAAO,IAAIN,EAAwBE,IAAI,CAC3C,CACAK,IAAIC,GACA,OAAON,KAAKC,MAAMK,EACtB,CACAC,IAAID,EAAKE,EAAMC,GACX,MAAA,EAAKA,CAAAA,GAAaT,KAAKC,MAAMS,eAAeJ,CAAG,IAG/CN,KAAKC,MAAMK,GAAOE,EACX,GACX,CACAG,IAAIL,GACA,OAAON,KAAKC,MAAMK,EACtB,CACJ,CAIJ,CAAC","file":"../../../providers/inmemory/in-memory-store.js","sourcesContent":["define([\r\n    '../simple-sync-rw-transaction'\r\n], function (SimpleSyncRWTransaction) {\r\n    'use strict';\r\n\r\n    /**\r\n     * A simple in-memory key-value store backed by a JavaScript object.\r\n     */\r\n    class InMemoryStore {\r\n        constructor() {\r\n            this.store = {};\r\n        }\r\n        clear() { this.store = {}; }\r\n        beginTransaction(type) {\r\n            return new SimpleSyncRWTransaction(this);\r\n        }\r\n        get(key) {\r\n            return this.store[key];\r\n        }\r\n        put(key, data, overwrite) {\r\n            if (!overwrite && this.store.hasOwnProperty(key)) {\r\n                return false;\r\n            }\r\n            this.store[key] = data;\r\n            return true;\r\n        }\r\n        del(key) {\r\n            delete this.store[key];\r\n        }\r\n    }\r\n\r\n\r\n    return InMemoryStore;\r\n});"]}