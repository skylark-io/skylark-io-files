{"version":3,"sources":["providers/synchronous-provider.js"],"names":["define","Buffer","paths","files","ErrorCodes","FileError","ActionType","FileFlag","utils","BaseProvider","SynchronousProvider","supportsSynch","rename","oldPath","newPath","cb","this","renameSync","e","stat","p","isLstat","statSync","open","flags","mode","openSync","unlink","unlinkSync","rmdir","rmdirSync","mkdir","mkdirSync","readdir","readdirSync","chmod","isLchmod","chmodSync","chown","isLchown","uid","gid","chownSync","utimes","atime","mtime","utimesSync","link","srcpath","dstpath","linkSync","symlink","type","symlinkSync","readlink","readlinkSync","providers"],"mappings":";;;;;;;AAAAA,OAAO,CACH,8BACA,sBACA,WACA,iBACA,gBACA,iBACA,eACA,WACA,mBACD,SAAUC,EAAOC,EAAOC,EAAMC,EAAYC,EAAWC,EAAYC,EAAUC,EAAMC,GAChF,aAEA,GAAM,GAAWD,QAMXE,UAA4BD,EAC9BE,gBACI,MAAO,CAAA,CACX,CACAC,OAAOC,EAASC,EAASC,GACrB,IACIC,KAAKC,WAAWJ,EAASC,CAAO,EAChCC,EAAG,CAIP,CAFA,MAAOG,GACHH,EAAGG,CAAC,CACR,CACJ,CACAC,KAAKC,EAAGC,EAASN,GACb,IACIA,EAAG,KAAMC,KAAKM,SAASF,EAAGC,CAAO,CAAC,CAItC,CAFA,MAAOH,GACHH,EAAGG,CAAC,CACR,CACJ,CACAK,KAAKH,EAAGI,EAAOC,EAAMV,GACjB,IACIA,EAAG,KAAMC,KAAKU,SAASN,EAAGI,EAAOC,CAAI,CAAC,CAI1C,CAFA,MAAOP,GACHH,EAAGG,CAAC,CACR,CACJ,CACAS,OAAOP,EAAGL,GACN,IACIC,KAAKY,WAAWR,CAAC,EACjBL,EAAG,CAIP,CAFA,MAAOG,GACHH,EAAGG,CAAC,CACR,CACJ,CACAW,MAAMT,EAAGL,GACL,IACIC,KAAKc,UAAUV,CAAC,EAChBL,EAAG,CAIP,CAFA,MAAOG,GACHH,EAAGG,CAAC,CACR,CACJ,CACAa,MAAMX,EAAGK,EAAMV,GACX,IACIC,KAAKgB,UAAUZ,EAAGK,CAAI,EACtBV,EAAG,CAIP,CAFA,MAAOG,GACHH,EAAGG,CAAC,CACR,CACJ,CACAe,QAAQb,EAAGL,GACP,IACIA,EAAG,KAAMC,KAAKkB,YAAYd,CAAC,CAAC,CAIhC,CAFA,MAAOF,GACHH,EAAGG,CAAC,CACR,CACJ,CACAiB,MAAMf,EAAGgB,EAAUX,EAAMV,GACrB,IACIC,KAAKqB,UAAUjB,EAAGgB,EAAUX,CAAI,EAChCV,EAAG,CAIP,CAFA,MAAOG,GACHH,EAAGG,CAAC,CACR,CACJ,CACAoB,MAAMlB,EAAGmB,EAAUC,EAAKC,EAAK1B,GACzB,IACIC,KAAK0B,UAAUtB,EAAGmB,EAAUC,EAAKC,CAAG,EACpC1B,EAAG,CAIP,CAFA,MAAOG,GACHH,EAAGG,CAAC,CACR,CACJ,CACAyB,OAAOvB,EAAGwB,EAAOC,EAAO9B,GACpB,IACIC,KAAK8B,WAAW1B,EAAGwB,EAAOC,CAAK,EAC/B9B,EAAG,CAIP,CAFA,MAAOG,GACHH,EAAGG,CAAC,CACR,CACJ,CACA6B,KAAKC,EAASC,EAASlC,GACnB,IACIC,KAAKkC,SAASF,EAASC,CAAO,EAC9BlC,EAAG,CAIP,CAFA,MAAOG,GACHH,EAAGG,CAAC,CACR,CACJ,CACAiC,QAAQH,EAASC,EAASG,EAAMrC,GAC5B,IACIC,KAAKqC,YAAYL,EAASC,EAASG,CAAI,EACvCrC,EAAG,CAIP,CAFA,MAAOG,GACHH,EAAGG,CAAC,CACR,CACJ,CACAoC,SAASlC,EAAGL,GACR,IACIA,EAAG,KAAMC,KAAKuC,aAAanC,CAAC,CAAC,CAIjC,CAFA,MAAOF,GACHH,EAAGG,CAAC,CACR,CACJ,CACJ,CAGA,OAAOf,EAAMqD,UAAU9C,oBAAuBA,CAClD,CAAC","file":"../../providers/synchronous-provider.js","sourcesContent":["define([\r\n    \"skylark-langx-binary/buffer\",\r\n    \"skylark-langx-paths\",\r\n    \"../files\",\r\n    \"../error-codes\",\r\n    '../file-error',\r\n    '../action-type',\r\n    '../file-flag',\r\n    '../utils',\r\n    \"./base-provider\"\r\n], function (Buffer,paths, files,ErrorCodes, FileError, ActionType, FileFlag, utils,BaseProvider) {\r\n    'use strict';\r\n\r\n    const { fail } = utils;\r\n\r\n    /**\r\n     * Implements the asynchronous API in terms of the synchronous API.\r\n     * @class SynchronousProvider\r\n     */\r\n    class SynchronousProvider extends BaseProvider {\r\n        supportsSynch() {\r\n            return true;\r\n        }\r\n        rename(oldPath, newPath, cb) {\r\n            try {\r\n                this.renameSync(oldPath, newPath);\r\n                cb();\r\n            }\r\n            catch (e) {\r\n                cb(e);\r\n            }\r\n        }\r\n        stat(p, isLstat, cb) {\r\n            try {\r\n                cb(null, this.statSync(p, isLstat));\r\n            }\r\n            catch (e) {\r\n                cb(e);\r\n            }\r\n        }\r\n        open(p, flags, mode, cb) {\r\n            try {\r\n                cb(null, this.openSync(p, flags, mode));\r\n            }\r\n            catch (e) {\r\n                cb(e);\r\n            }\r\n        }\r\n        unlink(p, cb) {\r\n            try {\r\n                this.unlinkSync(p);\r\n                cb();\r\n            }\r\n            catch (e) {\r\n                cb(e);\r\n            }\r\n        }\r\n        rmdir(p, cb) {\r\n            try {\r\n                this.rmdirSync(p);\r\n                cb();\r\n            }\r\n            catch (e) {\r\n                cb(e);\r\n            }\r\n        }\r\n        mkdir(p, mode, cb) {\r\n            try {\r\n                this.mkdirSync(p, mode);\r\n                cb();\r\n            }\r\n            catch (e) {\r\n                cb(e);\r\n            }\r\n        }\r\n        readdir(p, cb) {\r\n            try {\r\n                cb(null, this.readdirSync(p));\r\n            }\r\n            catch (e) {\r\n                cb(e);\r\n            }\r\n        }\r\n        chmod(p, isLchmod, mode, cb) {\r\n            try {\r\n                this.chmodSync(p, isLchmod, mode);\r\n                cb();\r\n            }\r\n            catch (e) {\r\n                cb(e);\r\n            }\r\n        }\r\n        chown(p, isLchown, uid, gid, cb) {\r\n            try {\r\n                this.chownSync(p, isLchown, uid, gid);\r\n                cb();\r\n            }\r\n            catch (e) {\r\n                cb(e);\r\n            }\r\n        }\r\n        utimes(p, atime, mtime, cb) {\r\n            try {\r\n                this.utimesSync(p, atime, mtime);\r\n                cb();\r\n            }\r\n            catch (e) {\r\n                cb(e);\r\n            }\r\n        }\r\n        link(srcpath, dstpath, cb) {\r\n            try {\r\n                this.linkSync(srcpath, dstpath);\r\n                cb();\r\n            }\r\n            catch (e) {\r\n                cb(e);\r\n            }\r\n        }\r\n        symlink(srcpath, dstpath, type, cb) {\r\n            try {\r\n                this.symlinkSync(srcpath, dstpath, type);\r\n                cb();\r\n            }\r\n            catch (e) {\r\n                cb(e);\r\n            }\r\n        }\r\n        readlink(p, cb) {\r\n            try {\r\n                cb(null, this.readlinkSync(p));\r\n            }\r\n            catch (e) {\r\n                cb(e);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    return files.providers.SynchronousProvider =  SynchronousProvider;\r\n});"]}